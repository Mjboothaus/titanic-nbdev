# AUTOGENERATED! DO NOT EDIT! File to edit: 88_app.ipynb (unless otherwise specified).

__all__ = ['TITANIC_DATA_FILE', 'AUTHOR_INFO', 'APP_NAME', 'SideBar', 'create_sidebar', 'create_mainscreen', 'sb']

# Cell

#def my_core_helper_function():
#    return True

# my_core_helper_function()

# Example test [PASSES]

# test_eq(True, my_core_helper_function())

# Cell
import numpy as np
import pandas as pd
import datetime as dt
import streamlit as st

from pandas_profiling import ProfileReport
from streamlit_pandas_profiling import st_profile_report

# Cell
TITANIC_DATA_FILE = 'http://biostat.mc.vanderbilt.edu/wiki/pub/Main/DataSets/titanic3.csv'
AUTHOR_INFO = 'AUTHOR: [Michael J. Booth](https://about.me/mjboothaus)'
APP_NAME = 'Titanic Data Explorer - PP'

# Cell
class SideBar:
    datasource = 'DATA: [Titanic Dataset (known errors)](http://biostat.mc.vanderbilt.edu/wiki/pub/Main/DataSets/titanic3info.txt)'
    datasize = 0   # look to calculate this (in MB?)
    author = AUTHOR_INFO
    title = 'Data details...'
    data_local = False
    start_date = dt.date.today()
    end_date = dt.date.today()
    selected_data = None
    calc_corr = False


def create_sidebar():
    sb = SideBar()
    st.sidebar.markdown(sb.author)
    st.sidebar.markdown(sb.datasource)
    st.sidebar.info(sb.title)
    st.sidebar.markdown('Datasize: ' + str(sb.datasize))
    sb.calc_corr = st.sidebar.checkbox('Calculate correlations?', value=False)
    return sb

def create_mainscreen(df, pr, APP_NAME):
    st.title(APP_NAME)
    st.write(df)
    st.header('Data Profile:')
    st_profile_report(pr)

# Cell
sb = create_sidebar()

try:
    df = pd.read_csv(TITANIC_DATA_FILE)
    if sb.calc_corr:
        pr = ProfileReport(df, explorative=True)
    else:
        pr = ProfileReport(df, explorative=True, correlations=None)
    create_mainscreen(df, pr, APP_NAME)
except Exception as e:
    st.write(e)
    st.write('ERROR: Unable to download data')